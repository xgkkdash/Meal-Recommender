from dataclasses import dataclass

from schemas import UserBase


@dataclass
class User:
    # required fields
    account_id: str  # unique str, as primary key, could be an email address
    password: str  # should be encoded before saving to DB
    email: str  # use as the way to contact user

    # Optional fields, but required to generate Plan, let user fill these after account created
    name: str = None
    age: int = None
    gender: str = None  # enum, Male/Female
    height: int = None
    weight: int = None  # current weight, ideal weight could be generated by age/gender/height

    @property
    def info_completed(self) -> bool:
        return all(v for v in self.__dict__.values())

    @classmethod
    def from_user_base(cls, user_base: UserBase):
        return cls(**vars(user_base))
